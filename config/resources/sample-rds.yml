Resources:
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306 # For MySQL, adjust the port number based on your DB engine
          ToPort: 3306
          SourceSecurityGroupId:
            Ref: LambdaSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: LesgoRDSSecurityGroup

  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      EngineMode: serverless
      EngineVersion: 8.0.mysql_aurora.3.02.0
      DBClusterIdentifier: ${self:provider.stackName}-db
      MasterUsername: ${env:LESGO_AWS_RDS_MASTER_USERNAME}
      MasterUserPassword:  ${env:LESGO_AWS_RDS_MASTER_PASSWORD}
      DBSubnetGroupName:
        Ref: MyDBSubnetGroup
      VpcSecurityGroupIds:
        - Ref: RDSSecurityGroup
      ScalingConfiguration:
        MinCapacity: ${env:LESGO_AWS_RDS_SCALE_CONFIG_MIN_CAPACITY}
        MaxCapacity: ${env:LESGO_AWS_RDS_SCALE_CONFIG_MAX_CAPACITY}
      BackupRetentionPeriod: 1
      PreferredBackupWindow: 07:00-09:00
      PreferredMaintenanceWindow: sat:07:00-sat:09:00
      StorageEncrypted: true
      Tags:
        - Key: Name
          Value: LesgoAuroraServerlessCluster

  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
      Tags:
        - Key: Name
          Value: LesgoMyDBSubnetGroup

  RDSProxy:
    Type: AWS::RDS::DBProxy
    Properties:
      DBProxyName: ${self:provider.stackName}-rdsProxy
      EngineFamily: MYSQL
      Auth:
        - AuthScheme: SECRETS
          SecretArn: arn:aws:secretsmanager:region:account-id:secret:MyRDSSecret
          IAMAuth: DISABLED
      RoleArn: arn:aws:iam::account-id:role/service-role/AmazonRDSDataFullAccess
      VpcSubnetIds:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
      VpcSecurityGroupIds:
        - Ref: RDSSecurityGroup
      RequireTLS: true
