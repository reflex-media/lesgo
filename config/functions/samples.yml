# sampleErrorHandling:
#   handler: ${self:custom.path.app}/handlers/samples/errorHandling.handler
#   description: Error Handling sample test
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/error-handling
#         method: get
#         private: false
#         cors: ${self:custom.http.cors}

# sampleJwt:
#   handler: ${self:custom.path.app}/handlers/samples/jwt.handler
#   description: Sample jwt test
#   timeout: 5
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/jwt
#         method: get
#         private: false
#         cors: ${self:custom.http.cors}

# sampleObjectStore:
#   handler: ${self:custom.path.app}/handlers/samples/objectStore.handler
#   description: S3 Sample
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/object-store
#         method: get
#         private: false
#         cors: ${self:custom.http.cors}

# sampleCache:
#   handler: ${self:custom.path.app}/handlers/samples/cache.handler
#   description: Cache sample test
#   timeout: 5
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/cache
#         method: get
#         private: false
#         cors: ${self:custom.http.cors}

# sampleQueue:
#   handler: ${self:custom.path.app}/handlers/samples/queue.handler
#   description: Queue sample test
#   memorySize: 192
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/queue
#         method: get
#         private: true
#         cors: ${self:custom.http.cors}

# sampleQueueProcessor:
#   handler: ${self:custom.path.app}/handlers/samples/queueProcessor.handler
#   description: Process sample queued test
#   memorySize: 128
#   reservedConcurrency: 3
#   events:
#     - sqs: arn:aws:sqs:${self:provider.region}:${env:AWS_ACCOUNT_ID}:${self:provider.stackName}-sampleQueue

# sampleScheduledEvent:
#   handler: ${self:custom.path.app}/handlers/samples/scheduledEvent.handler
#   description: Ping event triggered from Scheduled Cloudwatch Event
#   events:
#     - schedule:
#         name: ${self:provider.stackName}-sampleScheduledEvent
#         description: Trigger sampleScheduledEvent lambda function every 5 minute
#         rate: rate(5 minutes)
#         enabled: false

# sampleDb:
#   handler: ${self:custom.path.app}/handlers/samples/db.handler
#   description: Direct db connection without Knex ORM sample
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/db
#         method: get
#         private: true
#         cors: ${self:custom.http.cors}

#
# TODO REVIEW ALL THE SAMPLES BELOW
#
# database:
#   handler: ${self:custom.path.app}/handlers/samples/database.handler
#   description: Database Sample
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/database
#         method: get
#         private: false
#         cors: ${self:custom.http.cors}

# elasticsearch:
#   handler: ${self:custom.path.app}/handlers/samples/elasticsearch.handler
#   description: Elastic Search Sample
#   reservedConcurrency: 1
#   events:
#     - http:
#         path: samples/elasticsearch
#         method: get
#         private: false
#         cors: ${self:custom.http.cors}
