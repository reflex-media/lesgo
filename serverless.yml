service:
  name: sls-lesgo

plugins:
  - serverless-webpack
  - serverless-api-compression
  - serverless-offline
  - serverless-plugin-log-retention
  - serverless-dotenv-plugin

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: ${env:AWS_LAMBDA_MEMORY_SIZE}
  timeout: ${env:AWS_LAMBDA_TIMEOUT}
  stackName: ${self:service}-${self:provider.stage}
  apiName: ${self:provider.stackName}
  stage: ${opt:stage, 'local'}
  profile: ${env:AWS_ACCOUNT_PROFILE}
  region: ${opt:region, env:AWS_ACCOUNT_REGION}
  apiKeys:
    - usagePlan:
        - name: ${self:provider.stackName}-apiKey
          value: ${env:AWS_APIGATEWAY_SECRET_KEY}
  usagePlan:
    - usagePlan:
  stackTags:
    SITE: shared
    PRODUCT: ${self:service}
    STAGE: ${self:provider.stage}
  vpc:
    securityGroupIds:
      - Ref: LambdaSecurityGroup
    subnetIds:
      - Ref: PrivateSubnet1
      - Ref: PrivateSubnet2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'elasticache:*'
      Resource: '*'
    - Effect: Allow
      Action:
        - 'sqs:*'
      Resource: '*'
    - Effect: Allow
      Action:
        - 'es:*'
      Resource: '*'

  # TODO Review if this is still relevant
  # environment:
  #   ES_NODE:
  #     "Fn::GetAtt": ["ElasticsearchInstance", "DomainEndpoint"]
  #   ELASTICACHE_MEMCACHED_URL:
  #     "Fn::Join": [":", ["Fn::GetAtt": [MemcachedCluster, ConfigurationEndpoint.Address], "Fn::GetAtt": [MemcachedCluster, ConfigurationEndpoint.Port]]]

custom:
  path:
    app: src
    functions: config/functions
    resources: config/resources
  serverless-offline:
    port: 8888
  webpack:
    packager: yarn
  logRetentionInDays: ${env:AWS_LOG_RETENTION_DAYS, 7}
  contentEncoding:
    contentCompression: ${env:AWS_APIGATEWAY_COMPRESSION_MAX_BYTES, 100}
  http:
    cors: ${file(config/utils/cors.yml)}
  dotenv:
    basePath: config/environments/

# Add all the functions here
functions:
  - ${file(${self:custom.path.functions}/ping.yml)}
  - ${file(${self:custom.path.functions}/samples.yml)}

# Add all the additional resources here
resources:
  - ${file(${self:custom.path.resources}/vpc.yml)}
  - ${file(${self:custom.path.resources}/lambda.yml)}
  #- ${file(${self:custom.path.resources}/elastiCache.yml)}
  #- ${file(${self:custom.path.resources}/sqs.yml)}
  #- ${file(${self:custom.path.resources}/elasticsearch.yml)}
